{"version":3,"sources":["index.js"],"names":["data","nextGroup","i","push","id","name","concat","dataGroup","value","_","random","getRowNodeId","n","columnDefs","field","enableRowGroup","rowGroup","hide","headerName","filter","autoGroupColumnDef","pinned","valueGetter","_ref","node","group","getContextMenuItems","params","defaultItems","item","getMainMenuItems","App","props","_this","Object","_Users_ddcddavis_Projects_ag_grid_large_data_set_delete_test_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_ddcddavis_Projects_ag_grid_large_data_set_delete_test_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_ddcddavis_Projects_ag_grid_large_data_set_delete_test_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleUpdate","e","preventDefault","newData","_Users_ddcddavis_Projects_ag_grid_large_data_set_delete_test_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","state","indexUpdated","length","newValue","setState","handleDelete","Math","floor","splice","selected","_this$state","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","style","margin","bsStyle","bsSize","onClick","ag_grid_react__WEBPACK_IMPORTED_MODULE_8__","deltaRowDataMode","enableColResize","enableFilter","enableSorting","gridOptions","accentedSort","headerHeight","rowData","rowHeight","suppressAggFuncInHeader","toolPanelSuppressSideButtons","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.8c1404b6.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-enterprise\";\nimport _ from \"lodash\";\n\nimport { Button, ButtonToolbar } from \"react-bootstrap\";\n\nimport \"./styles.css\";\n\nlet data = [];\nlet nextGroup = 0;\nfor (let i = 0; i < 100000; i++) {\n  if (i % 2 === 0) {\n    nextGroup++;\n  }\n  data.push({\n    id: i,\n    name: `Thing ${i}`,\n    dataGroup: `group-${nextGroup}`,\n    value: _.random(5000)\n  });\n}\n\nconst getRowNodeId = n => `${n.id}-${n.dataGroup}`;\n\nconst columnDefs = [\n  {\n    field: \"dataGroup\",\n    enableRowGroup: true,\n    rowGroup: true,\n    hide: true\n  },\n  {\n    field: \"id\",\n    headerName: \"ID\",\n    filter: \"agTextColumnFilter\"\n  },\n  {\n    field: \"name\",\n    headerName: \"Name\",\n    filter: \"agTextColumnFilter\"\n  },\n  {\n    field: \"value\",\n    headerName: \"Value\"\n  }\n];\n\nconst autoGroupColumnDef = {\n  pinned: \"left\",\n  valueGetter: ({ node, data }) => {\n    if (!node.group) {\n      return data.dataGroup;\n    }\n\n    return \"\";\n  }\n};\n\nfunction getContextMenuItems(params) {\n  return params.defaultItems.filter(item => item !== \"toolPanel\");\n}\n\nfunction getMainMenuItems(params) {\n  return params.defaultItems.filter(item => item !== \"toolPanel\");\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data,\n      indexUpdated: null,\n      newValue: null,\n      selected: []\n    };\n  }\n\n  handleUpdate = e => {\n    e.preventDefault();\n    const newData = [...this.state.data];\n    const indexUpdated = _.random(this.state.data.length);\n    const newValue = _.random(5000);\n\n    newData[indexUpdated].value = newValue;\n\n    this.setState({\n      indexUpdated,\n      newValue,\n      data: newData\n    });\n  };\n\n  handleDelete = e => {\n    e.preventDefault();\n    let { data } = this.state;\n\n    let random = Math.floor(Math.random() * data.length);\n    let newData = [...data];\n    newData.splice(random, 1);\n\n    this.setState({\n      data: newData\n    });\n  };\n\n  render() {\n    let { data, indexUpdated, newValue } = this.state;\n\n    return (\n      <div className=\"ag-theme-balham\">\n        <h1>Large Data Update Test</h1>\n        <ButtonToolbar style={{ margin: \"8px 2px\" }}>\n          <Button bsStyle=\"primary\" bsSize=\"small\" onClick={this.handleUpdate}>\n            Random Update\n          </Button>\n          <Button bsStyle=\"danger\" bsSize=\"small\" onClick={this.handleDelete}>\n            Delete\n          </Button>\n        </ButtonToolbar>\n        {newValue &&\n          indexUpdated &&\n          `Updated value at index ${indexUpdated} to ${newValue}`}\n        <span>Total number of rows: {data.length}</span>\n        <AgGridReact\n          autoGroupColumnDef={autoGroupColumnDef} // Allows us to fiddle with the auto group column info, i.e. to pin it etc.\n          columnDefs={columnDefs}\n          deltaRowDataMode\n          enableColResize\n          enableFilter\n          enableSorting\n          getContextMenuItems={getContextMenuItems}\n          getMainMenuItems={getMainMenuItems}\n          getRowNodeId={getRowNodeId}\n          gridOptions={{\n            accentedSort: true,\n            headerHeight: 30\n          }}\n          rowData={data}\n          rowHeight=\"35\"\n          suppressAggFuncInHeader\n          toolPanelSuppressSideButtons\n        />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}